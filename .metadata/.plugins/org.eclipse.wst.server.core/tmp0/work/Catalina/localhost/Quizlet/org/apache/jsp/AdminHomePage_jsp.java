/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-03-12 03:57:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import administration.*;
import java.util.ArrayList;

public final class AdminHomePage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("administration");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"utf-8\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=1024\">\n");
      out.write("\t\t<title> Administration Home</title>\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"CSS/common.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"CSS/03.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"CSS/admin-formatting.css\">\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js\"></script>\n");
      out.write("\t\t\n");
      out.write("\t\t<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css\" />\n");
      out.write("\t\t\n");
      out.write("    \t<script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n");
      out.write("\t</head>\n");
      out.write("\t<script>\n");
      out.write("\t\t$(document).ready(function(){\n");
      out.write("\t\t\t$(\"#showTable\").click(function(){\n");
      out.write("\t\t        $(\"#data-table\").show();\n");
      out.write("\t\t        $(\"#bar-graph\").hide();\n");
      out.write("\t\t    });\n");
      out.write("\t\t    $(\"#showBarGraph\").click(function(){\n");
      out.write("\t\t        $(\"#data-table\").hide();\n");
      out.write("\t\t        $(\"#bar-graph\").show();\n");
      out.write("\t\t    });\n");
      out.write("\t\t    $(\"#showBoth\").click(function(){\n");
      out.write("\t\t    \t$(\"#data-table\").show();\n");
      out.write("\t\t    \t$(\"#bar-graph\").show();\n");
      out.write("\t\t    });\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("\t<body>\n");
      out.write("\t\t<div id=header>\t\n");
      out.write("\t\t\t<ul>\t\t\t\t<!-- Blue bar at the top of the admin page, height is set in the CSS styling -->\n");
      out.write("\t\t\t\t<li class=\"name\"><a href=\"AdminHomePage.jsp\">Quizzler</a></li>\n");
      out.write("\t\t\t\t<li><a href=\"/Quizlet/LogoutServlet\">Logout</a></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t<div id = \"extra-large-inner-header\">\t\t<!-- Page header, CSS styles it with a solid colour background -->\n");
      out.write("\t\t\t\t<h1>Administration</h1> \n");
      out.write("\t\t\t\t\t<div class = \"leftSide\"> <!-- Group short quick actions into an accordion bar  -->\n");
      out.write("\t\t\t\t\t\t<h1>Quick Actions</h1>\n");
      out.write("\t\t\t\t\t\t<div class=\"container\">\n");
      out.write("\t\t\t\t\t  \t\t<div class=\"panel-group\" id=\"accordion\">\t<!-- Based on an example from w3schools -->\n");
      out.write("\t\t\t\t\t    \t\t<div class=\"panel panel-default\">\n");
      out.write("\t\t\t\t\t      \t\t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t        \t\t\t<h4 class=\"panel-title\">\n");
      out.write("\t\t\t\t\t          \t\t\t\t<a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse1\">Make A New Administrator</a>\n");
      out.write("\t\t\t\t\t        \t\t\t</h4>\n");
      out.write("\t\t\t\t\t     \t\t\t</div>\n");
      out.write("\t\t      \t\t\t\t\t<div id=\"collapse1\" class=\"panel-collapse collapse in\">\n");
      out.write("\t\t        \t\t\t\t\t<div class=\"panel-body\">\n");
      out.write("\t\t        \t\t\t\t\t\t<form action =\"./quickActionServlet\" method = post>\n");
      out.write("\t\t        \t\t\t\t \t\t\t<input type = \"text\" name = \"username\" placeholder = \"Enter the name of the user\" size = \"40\">\n");
      out.write("\t\t        \t\t\t\t \t\t\t<input type = \"submit\" value = \"Make Admin\">\n");
      out.write("\t\t\t\t\t        \t\t\t\t \t");

					        				 		if (request.getAttribute("successAdmin") != null){
					        				 			if ((int) request.getAttribute("successAdmin") == 1){
					        				 				out.write("<p>"+(String)request.getParameter("username") + "was succesfully made an admin");
					        				 			} else if ((int) request.getAttribute("successAdmin") == 0){
					        				 				out.write("<p>Failed to make "+(String)request.getParameter("username") + "an admin");
					        				 			}
					        				 		}
					        				 	
      out.write("\n");
      out.write("\t\t        \t\t\t\t \t\t\t<input name=\"quickActionSelected\" type =\"hidden\" value =\"admin\">\n");
      out.write("\t\t        \t\t\t\t\t\t</form>\n");
      out.write("\t\t        \t\t\t\t\t</div>\n");
      out.write("\t\t      \t\t\t\t\t</div>\n");
      out.write("\t\t    \t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t    <div class=\"panel panel-default\">\n");
      out.write("\t\t\t\t\t\t      \t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t\t        \t<h4 class=\"panel-title\">\n");
      out.write("\t\t\t\t\t\t          \t\t<a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse2\">Create A New Announcement</a>\n");
      out.write("\t\t\t\t\t\t       \t\t</h4>\n");
      out.write("\t\t\t\t\t\t     \t </div>\n");
      out.write("\t\t\t\t\t\t      \t<div id=\"collapse2\" class=\"panel-collapse collapse\">\n");
      out.write("\t\t\t\t\t\t        \t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t\t\t        \t<form action =\"./quickActionServlet\" method = post>\n");
      out.write("\t\t\t\t\t\t\t        \t\tEnter the text of the announcement and press 'Make Announcement':\n");
      out.write("\t\t\t\t\t\t\t        \t\t<textarea name = \"newAnnouncement\" cols = \"50\" rows = \"6\" >\n");
      out.write("\t\t\t\t\t\t\t        \t\t</textarea>\n");
      out.write("\t\t\t\t\t\t\t        \t\t<input type = \"submit\" value = \"Make Annoucement\">\n");
      out.write("\t\t\t\t\t\t\t        \t\t<input name=\"quickActionSelected\" type =\"hidden\" value =\"announce\">\n");
      out.write("\t\t\t\t\t\t\t        \t\t");

										 		if (request.getAttribute("successAnnounce") != null){
										 			if ((int) request.getAttribute("successAnnounce") == 1){
										 				out.write("<p>Announcement was succesfully made to the community");
										 			} else if ((int) request.getAttribute("successAnnounce") == 0){
										 				out.write("<p>Failed to make the announcement");
										 			}
										 		}
									 		
      out.write("\n");
      out.write("\t\t\t\t\t\t\t        \t</form>\n");
      out.write("\t\t\t\t\t\t        \t</div>\n");
      out.write("\t\t\t\t\t\t      \t</div>\n");
      out.write("\t\t\t\t\t\t    </div>\n");
      out.write("\t\t\t\t\t    \t<div class=\"panel panel-default\">\n");
      out.write("\t\t\t\t\t      \t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t        \t\t<h4 class=\"panel-title\">\n");
      out.write("\t\t\t\t\t          \t\t\t<a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse3\">Remove a User's Account</a>\n");
      out.write("\t\t\t\t\t        \t\t</h4>\n");
      out.write("\t\t\t\t\t      \t\t</div>\n");
      out.write("\t\t\t\t\t      \t<div id=\"collapse3\" class=\"panel-collapse collapse\">\n");
      out.write("\t\t\t\t\t        \t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t\t        \t<form action =\"./quickActionServlet\" method = post>\n");
      out.write("\t\t\t\t\t\t        \t\t<input type = \"text\" name = \"userNameToRemove\" placeholder = \"Enter the name of the user\" size = \"40\">\n");
      out.write("\t\t\t\t\t\t        \t\t<input type = \"submit\" value = \"Remove User\">\n");
      out.write("\t\t\t\t\t\t        \t\t<input name=\"quickActionSelected\" type =\"hidden\" value =\"remove\">\n");
      out.write("\t\t\t\t\t\t        \t\t");

										 	if (request.getAttribute("successRemove") != null){
										 		if ((int) request.getAttribute("successRemove") == 1){
										 			out.write("<p>User was succesfully removed from the community");
										 		} else if ((int) request.getAttribute("successRemove") == 0){
										 			out.write("<p>Failed to remove the user");
										 		}
										 	}
									 	
      out.write("\n");
      out.write("\t\t\t\t\t\t        \t</form>\n");
      out.write("\t\t\t\t\t        \t</div>\n");
      out.write("\t\t\t\t\t      \t</div>\n");
      out.write("\t\t\t\t\t    </div>\n");
      out.write("\t\t  \t\t\t</div> \n");
      out.write("\t\t  \t\t\t</br><!-- Just a break to separate our quiz remove section from everything else -->\n");
      out.write("\t\t  \t\t</div>\n");
      out.write("\t\t\t\t<div class = \"quizRemove\">\t\n");
      out.write("\t\t\t\t\t<h1>Remove Quiz</h1>\n");
      out.write("\t\t\t\t\t<form action = \"./quickActionServlet\" method = post>\n");
      out.write("\t\t\t\t\t\t<input type = \"text\" name = \"quizToRemove\" placeholder = \"Enter the name of the quiz to delete\" size = \"40\">\n");
      out.write("\t\t\t\t\t\t<input type = \"submit\" value = \"Remove Quiz\">\n");
      out.write("\t\t\t\t\t\t<input name=\"quickActionSelected\" type =\"hidden\" value =\"removeQuiz\">\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t");

					   if (request.getAttribute("successRemoveQuiz") != null){
					        if ((int) request.getAttribute("successRemoveQuiz") == 1){
					        		out.write("<p>"+(String)request.getParameter("quizToRemove") + " was succesfully removed" + "</p>");
					        } else if ((int) request.getAttribute("successRemoveQuiz") == 0){
					        		out.write("<p>"+(String)request.getParameter("quizToRemove") + " could not be found or removed" + "</p>");
					        }
					   }
					
      out.write("\n");
      out.write("\t\t\t\t\t<h1> Remove Quiz History</h1>\n");
      out.write("\t\t\t\t\t<form action = \"./quickActionServlet\" method = post>\n");
      out.write("\t\t\t\t\t\t<input type = \"text\" name = \"quizToClear\" placeholder = \"Enter the name of the quiz to clear\" size = \"40\">\n");
      out.write("\t\t\t\t\t\t<input type = \"submit\" value = \"Remove Quiz History\">\n");
      out.write("\t\t\t\t\t\t<input name = \"quickActionSelected\" type = \"hidden\" value = \"removeQuizHistory\">\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t");

						if (request.getAttribute("successClearHistory") != null){
							if ((int) request.getAttribute("successClearHistory") == 1){
								out.write("<p>" + (String)request.getParameter("quizToClear") + " scoreboard was succesfully cleared </p>");
							} else if ((int) request.getAttribute("successClearHistory") == 0){
								out.write("<p>" + (String)request.getParameter("quizToClear") + " could not be found or failed to remove board </p>");	
							}
						}
					
					
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\t\n");
      out.write("\t\t\t<div id=\"wrapper\">\n");
      out.write("\t\t\t\t<h1> Site Statistics</h1>\n");
      out.write("\t\t\t\t");
 
					Administrator adminLink = (Administrator) (request.getServletContext()).getAttribute("currentStats");
					if (adminLink != null) adminLink.getVisitFreq();
					if (adminLink == null) System.out.println("VALUES IS NULL LIAM, STUFF WENT WRONG");
				
      out.write("\n");
      out.write("\t\t\t\t<p> Current Number of Users: <span class = \"purple\">  <b> ");
out.write(Integer.toString(adminLink.getNumUsers())); 
      out.write("</b> </span> </p>\n");
      out.write("\t\t\t\t<p> Current Number Of Quizzes: <span class = \"purple\"><b> ");
 out.write(Integer.toString(adminLink.getNumQuizzes())); 
      out.write(" </b> </span> </p>\n");
      out.write("\t\t\t\t<button id=\"showTable\">Show Table View</button>\t\t\t<!--  Buttons that control how the data -->\n");
      out.write("\t\t\t\t<button id=\"showBarGraph\">Show BarGraph View</button>\t<!--  is presented to the administrator -->\n");
      out.write("\t\t\t\t<button id=\"showBoth\"> Show Both Views</button>\n");
      out.write("\t\t\t\t<div class=\"chart\" id = \"chart-access\">\n");
      out.write("\t\t\t\t\t<h2>Monthly Visits to Web Pages</h2>\n");
      out.write("\t\t\t\t\t<table id=\"data-table\" border=\"1\" summary=\"This table shows the monthly visits to certain key web pages on the site\">\n");
      out.write("\t\t\t\t\t\t<caption>Numbers In Thousands</caption>\n");
      out.write("\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t\t\t\t\t");
 
									if (adminLink != null){
										ArrayList<String> namesOfMonth = adminLink.getNameOfMonths();
										for (int i = 0; i < namesOfMonth.size(); i++){
											String monthName = namesOfMonth.get(i);
											out.write("<th scope = \"col\">" +monthName +"</th>");
										}
									}
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t</tr>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t<tbody>\n");
      out.write("\t\t\t\t\t\t\t");

							String firstSite ="";
							String secondSite ="";
							String thirdSite ="";
							if (adminLink != null){
								ArrayList<PageInfo> pagesToDisplay = adminLink.getPages();
								for (int i = 0; i < pagesToDisplay.size(); i++){
									PageInfo temp = pagesToDisplay.get(i);
									out.write("<tr>");
									out.write("<th scope = \"row\">" + temp.pageName + "</th>");
									int numMonths = 7;
									String tempSite ="";
									for (int j = 0; j < numMonths; j++){
										out.write("<td>" + temp.fetchFreq(j) + "</td>");
										tempSite = tempSite + temp.fetchFreq(j);
										if (j != numMonths - 1){
											tempSite +=", ";
										} 
									}
									if (i == 0){
										firstSite = tempSite;
									} else if (i == 1){
										secondSite = tempSite;
									} else {
										thirdSite = tempSite;
									}
									out.write("</tr>");
								}
							}
							
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t</tbody>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"ct-chart ct-perfect-fourth\" style=\"height: 400px; width: 600px;\">\n");
      out.write("\t\t\t\t<script>\n");
      out.write("\t\t\t\t");

					ArrayList<Integer> values43 = new ArrayList<Integer>();
					out.write("new Chartist.Bar('.ct-chart', {");
					out.write("labels: ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday','Satuday'],");
					
					out.write("series: [");
					out.write("[" + firstSite + "],");
					out.write("[" + secondSite + "],");
					out.write("[" + thirdSite + "]");
					
					out.write("]");
					out.write("}, {");
					out.write("fullWidth: true,");
					out.write("chartPadding: {");
					out.write("right: 40");
					out.write("}");
					out.write("});");
				
      out.write("\n");
      out.write("\t\t\t\t</script>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
