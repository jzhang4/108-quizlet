/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-03-07 23:21:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import quiz.Quiz;
import quiz.Question;
import quiz.MAQuestion;
import java.util.*;

public final class DisplayQuiz_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("quiz.Question");
    _jspx_imports_classes.add("quiz.Quiz");
    _jspx_imports_classes.add("quiz.MAQuestion");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Display quiz</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1>Display Quiz</h1>\n");


Quiz quiz = (Quiz)(session.getAttribute("quiz"));
out.println("<h2>"+quiz.getName()+ "</h2>");
out.println("<p>"+quiz.getDescription()+"<p>");
Iterator<Question> it = quiz.iterator();
int index = 1;
while (it.hasNext()) {
	Question q = it.next();
	String ques = q.getQuestion();
	out.println("<p>Type: "+q.stringType(q.getType()) + "</p>");

	if (q.getType() == Question.PICTURE_RESPONSE) {
		out.println("<p>Question "+index + "</p>");
		out.println("<img src=\""+ques + "\" alt = \""+ques+"\" style = \"width:128px;height:128px;\">");
	} else out.println("<p>Question "+index + ": "+ques + "</p>");
	
	if (q.getType() == Question.MULTIPLE_ANSWER) {
		MAQuestion maq = (MAQuestion)q; 
		String ordered = Boolean.toString(maq.ordered());
		int numanswers = maq.getNumAnswers();
		out.println("<p>Ordered: "+ordered + "</p>");
		out.println("<p>Number of Required Answers: " + numanswers +"</p>");
	}
	
	ArrayList<String> answers = q.getAnswer().getAnswer();
	out.println("<p> Answer(s): ");
	for (String str : answers) {
		out.println(str+"\n");
	}
	out.println("</p>");
	if (q.getType() == Question.MULTIPLE_CHOICE) {
		ArrayList<String> choices = q.getChoices();
		out.println("<p> Choices(s): ");
		for (String str : choices) {
			out.println(str+"\n");
		}
		out.println("</p>");
	}
	index++;
	
}


      out.write("\n");
      out.write("\n");
      out.write("<form action=\"TakeQuizServlet\" method=\"post\">\n");
      out.write("  <input type=\"submit\" value = \"Take Quiz\"/>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form action=\"RemoveQuestionServlet\" method=\"post\">\n");
      out.write("  <p>Remove question number: <input type=\"text\" name=\"num\" />\n");
      out.write("  <input type=\"submit\" value = \"Remove\"/>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form action=\"AddQuestionServlet\" method=\"post\">\n");
      out.write("  <input type=\"submit\" value = \"Add new question.\"/>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form action=\"CreateQuizServlet\" method=\"post\">\n");
      out.write("  <input type=\"submit\" value = \"Create quiz\"/>\n");
      out.write("</form>\n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
