/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-03-12 01:38:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import quiz.Quiz;
import quiz.Question;
import user.DBConnection;
import java.util.*;
import java.sql.*;

public final class ListQuizzes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("quiz.Question");
    _jspx_imports_classes.add("quiz.Quiz");
    _jspx_imports_classes.add("user.DBConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t<title>Quizzes </title>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"CSS/common.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"CSS/login-formatting.css\">\n");
      out.write("\t\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<div id=header>\n");
      out.write("\n");
      out.write("\t\t<ul>\n");
      out.write("\t\t\t<li class=\"name\"><a>Quizzler</a></li>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");

				if (request.getParameter("temp") != null || request.getAttribute("temp") != null) {
					out.println("<li><a href=\"CreateNewAccount.html\">Create Account</a></li>");
				} else {
					out.println("<li><a href=\"HomepageLogin.html\">Logout</a></li>");
					out.println("<li><a href=\"ListQuizzes.jsp\">Quizzes</a></li>");
					out.println("<li><a href=\"HomepageUser.jsp\">Profile</a></li>");
				}
			
      out.write("\n");
      out.write("\t\t</ul>\n");
      out.write("\t\t<div id=\"extra-large-inner-header\">\n");
      out.write("\t\n");
      out.write("\t\t\t<h1>Choose a Quiz to View! </h1>\n");
      out.write("\t\t\t<form action=\"QuizSummaryPage.jsp\" method=\"post\">\n");
      out.write("\t\t\t\t");

				ServletContext context = getServletContext(); 
				DBConnection connect = (DBConnection)(context.getAttribute("Connection"));
				
				Statement stmt = connect.getStatement(); 
				ResultSet rs = stmt.executeQuery("SELECT * FROM quizzes");
				int count = 0;
				while (rs.next()) {
					String name = rs.getString(2);
					if(count == 0){
						out.println("<input type=\"radio\" name=\"quizname\" checked=\"checked\" value=\""+name+"\"> "+name +"<br>");
					}else{
						out.println("<input type=\"radio\" name=\"quizname\" value=\""+name+"\"> "+name +"<br>");
					}
					count++;
				}
							
				if (request.getParameter("temp") != null || request.getAttribute("temp") != null) {
					out.println("<input type=\"hidden\" value=\"true\" name=\"temp\"/>");
					request.setAttribute("temp", true);
				}

				
      out.write("\n");
      out.write("\t\t\t<input type=\"submit\" class=\"btn btn-primary\" value = \"View Quiz Summary\"/>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");

				if (request.getParameter("temp") == null) {
					out.println("<form action=\"NewQuizForm.html\">");
					out.println("<input type=\"submit\" class=\"btn btn-primary\" value = \"Create New Quiz\"/>");
					out.println("</form>");
				}
			
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
